/* midgard.vapi generated by valac 0.11.5, do not modify. */

[CCode (cprefix = "Midgard", lower_case_cprefix = "midgard_")]
namespace Midgard {
	[CCode (cheader_filename = "midgard_key_config_common.h")]
	public abstract class KeyConfig : GLib.Object {
		protected Midgard.KeyConfigContext context;
		protected string path;
		public KeyConfig (Midgard.KeyConfigContext keyctx, string path);
		public virtual bool delete_group (string name);
		public virtual string? get_comment (string group, string key);
		public virtual string? get_value (string group, string key);
		public virtual bool group_exists (string name);
		public virtual string[]? list_groups ();
		public virtual bool load_from_data (string data);
		public virtual void set_comment (string group, string key, string comment);
		public virtual void set_value (string group, string key, string value);
		public virtual bool store ();
		public virtual string? to_data ();
	}
	[CCode (cheader_filename = "midgard_key_config_common.h")]
	public abstract class KeyConfigContext : GLib.Object {
		public KeyConfigContext (string? context_path);
		public virtual string[]? list_key_config ();
		public string? context_path { get; private set; }
	}
	[CCode (cheader_filename = "midgard_key_config_common.h")]
	public class KeyConfigFile : Midgard.KeyConfig {
		public KeyConfigFile (Midgard.KeyConfigFileContext keyctx, string path) throws KeyConfigContextError;
		public override bool delete_group (string name);
		public override string? get_comment (string group, string key);
		public override string? get_value (string group, string key);
		public override bool group_exists (string name);
		public override string[]? list_groups ();
		public override bool load_from_data (string data);
		public override void set_comment (string group, string key, string comment);
		public override void set_value (string group, string key, string value);
		public override bool store ();
		public override string? to_data ();
	}
	[CCode (cheader_filename = "midgard_key_config_common.h")]
	public class KeyConfigFileContext : Midgard.KeyConfigContext {
		public KeyConfigFileContext (string context_path) throws KeyConfigContextError;
		public override string[]? list_key_config ();
	}
}
